// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UbyTecAPI.Models;

#nullable disable

namespace UbyTecAPI.Migrations
{
    [DbContext(typeof(UbyTecContext))]
    [Migration("20241119090344_UpdateDetallePedido")]
    partial class UpdateDetallePedido
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UbyTecAPI.Models.Administrador", b =>
                {
                    b.Property<int>("AdministradorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministradorID"));

                    b.Property<string>("DireccionCanton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionDistrito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionProvincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdministradorID");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Afiliado", b =>
                {
                    b.Property<int>("AfiliadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AfiliadoID"));

                    b.Property<string>("Administrador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionCanton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionDistrito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionProvincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComercio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCedulaJuridica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroSINPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoComercio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoComercioID")
                        .HasColumnType("int");

                    b.HasKey("AfiliadoID");

                    b.HasIndex("TipoComercioID");

                    b.ToTable("Afiliados");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionCanton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionDistrito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionProvincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteID");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("UbyTecAPI.Models.DetallePedido", b =>
                {
                    b.Property<int>("DetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DetalleID"));

                    b.Property<int>("AfiliadoID")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PedidoID")
                        .HasColumnType("int");

                    b.Property<int>("RepartidorID")
                        .HasColumnType("int");

                    b.HasKey("DetalleID");

                    b.HasIndex("AfiliadoID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("PedidoID");

                    b.HasIndex("RepartidorID");

                    b.ToTable("DetallesPedido");
                });

            modelBuilder.Entity("UbyTecAPI.Models.EstadoRepartidor", b =>
                {
                    b.Property<int>("EstadoRepartidorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstadoRepartidorID"));

                    b.Property<bool>("Disponible")
                        .HasColumnType("bit");

                    b.Property<int>("RepartidorID")
                        .HasColumnType("int");

                    b.HasKey("EstadoRepartidorID");

                    b.HasIndex("RepartidorID");

                    b.ToTable("EstadoRepartidor");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Pedido", b =>
                {
                    b.Property<int>("PedidoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PedidoID"));

                    b.Property<int>("AfiliadoID")
                        .HasColumnType("int");

                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<string>("EstadoPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RepartidorID")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PedidoID");

                    b.HasIndex("AfiliadoID");

                    b.HasIndex("ClienteID");

                    b.HasIndex("RepartidorID");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Producto", b =>
                {
                    b.Property<int>("ProductoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoID"));

                    b.Property<int?>("AfiliadoID")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ProductoID");

                    b.HasIndex("AfiliadoID");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("UbyTecAPI.Models.ProductoDetalle", b =>
                {
                    b.Property<int>("ProductoDetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoDetalleID"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("DetallePedidoID")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductoID")
                        .HasColumnType("int");

                    b.HasKey("ProductoDetalleID");

                    b.HasIndex("DetallePedidoID");

                    b.HasIndex("ProductoID");

                    b.ToTable("ProductosDetalle");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Repartidor", b =>
                {
                    b.Property<int>("RepartidorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RepartidorID"));

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionCanton")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionDistrito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DireccionProvincia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RepartidorID");

                    b.ToTable("Repartidores");
                });

            modelBuilder.Entity("UbyTecAPI.Models.TelefonoAdministrador", b =>
                {
                    b.Property<int>("TelefonoAdministradorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefonoAdministradorID"));

                    b.Property<int>("AdministradorID")
                        .HasColumnType("int");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TelefonoAdministradorID");

                    b.HasIndex("AdministradorID");

                    b.ToTable("TelefonosAdministradores");
                });

            modelBuilder.Entity("UbyTecAPI.Models.TelefonoAfiliado", b =>
                {
                    b.Property<int>("TelefonoAfiliadoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefonoAfiliadoID"));

                    b.Property<int?>("AfiliadoID")
                        .HasColumnType("int");

                    b.Property<string>("NumeroTelefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TelefonoAfiliadoID");

                    b.HasIndex("AfiliadoID");

                    b.ToTable("TelefonosAfiliados");
                });

            modelBuilder.Entity("UbyTecAPI.Models.TelefonoRepartidor", b =>
                {
                    b.Property<int>("TelefonoRepartidorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TelefonoRepartidorID"));

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RepartidorID")
                        .HasColumnType("int");

                    b.HasKey("TelefonoRepartidorID");

                    b.HasIndex("RepartidorID");

                    b.ToTable("TelefonosRepartidores");
                });

            modelBuilder.Entity("UbyTecAPI.Models.TipoComercio", b =>
                {
                    b.Property<int>("TipoComercioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipoComercioID"));

                    b.Property<string>("NombreTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoComercioID");

                    b.ToTable("TiposComercio");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Afiliado", b =>
                {
                    b.HasOne("UbyTecAPI.Models.TipoComercio", null)
                        .WithMany("Afiliados")
                        .HasForeignKey("TipoComercioID");
                });

            modelBuilder.Entity("UbyTecAPI.Models.DetallePedido", b =>
                {
                    b.HasOne("UbyTecAPI.Models.Afiliado", "Afiliado")
                        .WithMany()
                        .HasForeignKey("AfiliadoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UbyTecAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UbyTecAPI.Models.Pedido", "Pedido")
                        .WithMany("DetallesPedido")
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("UbyTecAPI.Models.Repartidor", "Repartidor")
                        .WithMany()
                        .HasForeignKey("RepartidorID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Afiliado");

                    b.Navigation("Cliente");

                    b.Navigation("Pedido");

                    b.Navigation("Repartidor");
                });

            modelBuilder.Entity("UbyTecAPI.Models.EstadoRepartidor", b =>
                {
                    b.HasOne("UbyTecAPI.Models.Repartidor", "Repartidor")
                        .WithMany()
                        .HasForeignKey("RepartidorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Repartidor");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Pedido", b =>
                {
                    b.HasOne("UbyTecAPI.Models.Afiliado", "Afiliado")
                        .WithMany()
                        .HasForeignKey("AfiliadoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UbyTecAPI.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UbyTecAPI.Models.Repartidor", "Repartidor")
                        .WithMany()
                        .HasForeignKey("RepartidorID");

                    b.Navigation("Afiliado");

                    b.Navigation("Cliente");

                    b.Navigation("Repartidor");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Producto", b =>
                {
                    b.HasOne("UbyTecAPI.Models.Afiliado", "Afiliado")
                        .WithMany("Productos")
                        .HasForeignKey("AfiliadoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Afiliado");
                });

            modelBuilder.Entity("UbyTecAPI.Models.ProductoDetalle", b =>
                {
                    b.HasOne("UbyTecAPI.Models.DetallePedido", "DetallePedido")
                        .WithMany("Productos")
                        .HasForeignKey("DetallePedidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UbyTecAPI.Models.Producto", "Producto")
                        .WithMany()
                        .HasForeignKey("ProductoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DetallePedido");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("UbyTecAPI.Models.TelefonoAdministrador", b =>
                {
                    b.HasOne("UbyTecAPI.Models.Administrador", null)
                        .WithMany("Telefonos")
                        .HasForeignKey("AdministradorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UbyTecAPI.Models.TelefonoAfiliado", b =>
                {
                    b.HasOne("UbyTecAPI.Models.Afiliado", "Afiliado")
                        .WithMany("Telefonos")
                        .HasForeignKey("AfiliadoID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Afiliado");
                });

            modelBuilder.Entity("UbyTecAPI.Models.TelefonoRepartidor", b =>
                {
                    b.HasOne("UbyTecAPI.Models.Repartidor", null)
                        .WithMany("Telefonos")
                        .HasForeignKey("RepartidorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UbyTecAPI.Models.Administrador", b =>
                {
                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Afiliado", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("UbyTecAPI.Models.DetallePedido", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Pedido", b =>
                {
                    b.Navigation("DetallesPedido");
                });

            modelBuilder.Entity("UbyTecAPI.Models.Repartidor", b =>
                {
                    b.Navigation("Telefonos");
                });

            modelBuilder.Entity("UbyTecAPI.Models.TipoComercio", b =>
                {
                    b.Navigation("Afiliados");
                });
#pragma warning restore 612, 618
        }
    }
}
